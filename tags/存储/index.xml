<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>存储 on codedump的网络日志</title>
    <link>https://www.codedump.info/tags/%E5%AD%98%E5%82%A8/</link>
    <description>Recent content in 存储 on codedump的网络日志</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <copyright>&amp;copy; 2018 &lt;a href=&#34;https://www.codedump.info/&#34;&gt;codedump&lt;/a&gt;
</copyright>
    <lastBuildDate>Tue, 01 Feb 2022 15:55:40 +0800</lastBuildDate><atom:link href="https://www.codedump.info/tags/%E5%AD%98%E5%82%A8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>sqlite3.36版本 btree实现（五）- Btree的实现</title>
      <link>https://www.codedump.info/post/20220201-sqlite-btree-5-btree/</link>
      <pubDate>Tue, 01 Feb 2022 15:55:40 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20220201-sqlite-btree-5-btree/</guid>
      <description>《sqlite3.36版本 btree实现》系列文章： sqlite3.36版本 btree实现（零）- 起步及概述 - codedump的网络日志 sqlite3</description>
    </item>
    
    <item>
      <title>sqlite3.36版本 btree实现（四）- WAL的实现</title>
      <link>https://www.codedump.info/post/20220106-sqlite-btree-4-wal/</link>
      <pubDate>Thu, 06 Jan 2022 21:48:18 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20220106-sqlite-btree-4-wal/</guid>
      <description>《sqlite3.36版本 btree实现》系列文章： sqlite3.36版本 btree实现（零）- 起步及概述 - codedump的网络日志 sqlite3</description>
    </item>
    
    <item>
      <title>sqlite3.36版本 btree实现（三）- journal文件备份机制</title>
      <link>https://www.codedump.info/post/20211222-sqlite-btree-3-journal/</link>
      <pubDate>Wed, 22 Dec 2021 19:15:31 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20211222-sqlite-btree-3-journal/</guid>
      <description>《sqlite3.36版本 btree实现》系列文章： sqlite3.36版本 btree实现（零）- 起步及概述 - codedump的网络日志 sqlite3</description>
    </item>
    
    <item>
      <title>sqlite3.36版本 btree实现（二）- 并发控制框架</title>
      <link>https://www.codedump.info/post/20211218-sqlite-btree-2-concurrency-control/</link>
      <pubDate>Sat, 18 Dec 2021 15:25:05 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20211218-sqlite-btree-2-concurrency-control/</guid>
      <description>《sqlite3.36版本 btree实现》系列文章： sqlite3.36版本 btree实现（零）- 起步及概述 - codedump的网络日志 sqlite3</description>
    </item>
    
    <item>
      <title>sqlite3.36版本 btree实现（一）- 管理页面缓存</title>
      <link>https://www.codedump.info/post/20211217-sqlite-btree-1-pagecache/</link>
      <pubDate>Fri, 17 Dec 2021 14:22:06 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20211217-sqlite-btree-1-pagecache/</guid>
      <description>《sqlite3.36版本 btree实现》系列文章： sqlite3.36版本 btree实现（零）- 起步及概述 - codedump的网络日志 sqlite3</description>
    </item>
    
    <item>
      <title>sqlite3.36版本 btree实现（零）- 起步及概述</title>
      <link>https://www.codedump.info/post/20211217-sqlite-btree-0/</link>
      <pubDate>Fri, 17 Dec 2021 10:19:05 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20211217-sqlite-btree-0/</guid>
      <description>《sqlite3.36版本 btree实现》系列文章： sqlite3.36版本 btree实现（零）- 起步及概述 - codedump的网络日志 sqlite3</description>
    </item>
    
    <item>
      <title>Memcached的存储原理解析（续）</title>
      <link>https://www.codedump.info/post/20210812-memcached/</link>
      <pubDate>Thu, 12 Aug 2021 08:40:04 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20210812-memcached/</guid>
      <description>概述 在前面的Memcached的存储原理解析一文中，简单分析了memcached的存储原理，但是最近在照搬memcached的实现原理到项目中时，发现</description>
    </item>
    
    <item>
      <title>Memcached的存储原理解析</title>
      <link>https://www.codedump.info/post/20210701-memcached/</link>
      <pubDate>Thu, 01 Jul 2021 14:00:22 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20210701-memcached/</guid>
      <description>概述 最近工作上的需要，需要做一个LRU形式管理内存的分配器，首先想到的就是Memcached这个项目。早些年粗略的看过一些，有个大体的了解，这一次看下</description>
    </item>
    
    <item>
      <title>boltdb 1.3.0实现分析（四）</title>
      <link>https://www.codedump.info/post/20200726-boltdb-4/</link>
      <pubDate>Sun, 26 Jul 2020 17:55:11 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20200726-boltdb-4/</guid>
      <description>本文基于boltdb 1.3.0对其实现进行分析。boltdb是etcd系统存储数据使用的KV嵌入式DB，使用Go编码实现，内部是一个B+树结构体。关于</description>
    </item>
    
    <item>
      <title>boltdb 1.3.0实现分析（三）</title>
      <link>https://www.codedump.info/post/20200725-boltdb-3/</link>
      <pubDate>Sat, 25 Jul 2020 11:26:33 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20200725-boltdb-3/</guid>
      <description>本文基于boltdb 1.3.0对其实现进行分析。boltdb是etcd系统存储数据使用的KV嵌入式DB，使用Go编码实现，内部是一个B+树结构体。关于</description>
    </item>
    
    <item>
      <title>boltdb 1.3.0实现分析（二）</title>
      <link>https://www.codedump.info/post/20200711-boltdb-2/</link>
      <pubDate>Sat, 11 Jul 2020 09:33:06 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20200711-boltdb-2/</guid>
      <description>本文基于boltdb 1.3.0对其实现进行分析。boltdb是etcd系统存储数据使用的KV嵌入式DB，使用Go编码实现，内部是一个B+树结构体。关于</description>
    </item>
    
    <item>
      <title>boltdb 1.3.0实现分析（一）</title>
      <link>https://www.codedump.info/post/20200625-boltdb-1/</link>
      <pubDate>Thu, 25 Jun 2020 21:43:17 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20200625-boltdb-1/</guid>
      <description>本文基于boltdb 1.3.0对其实现进行分析。boltdb是etcd系统存储数据使用的KV嵌入式DB，使用Go编码实现，内部是一个B+树结构体。关于</description>
    </item>
    
    <item>
      <title>B树、B&#43;树索引算法原理（下）</title>
      <link>https://www.codedump.info/post/20200615-btree-2/</link>
      <pubDate>Mon, 15 Jun 2020 22:44:21 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20200615-btree-2/</guid>
      <description>这一段时间由于在阅读boltdb代码的缘故，找机会学习了B树及B+树的算法原理，这个系列会花两个篇幅分别介绍这两种数据结构的实现，其用于数据库索引中的</description>
    </item>
    
    <item>
      <title>B树、B&#43;树索引算法原理（上）</title>
      <link>https://www.codedump.info/post/20200609-btree-1/</link>
      <pubDate>Tue, 09 Jun 2020 18:40:46 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20200609-btree-1/</guid>
      <description>这一段时间由于在阅读boltdb代码的缘故，找机会学习了B树及B+树的算法原理，这个系列会花两个篇幅分别介绍这两种数据结构的实现，其用于数据库索引中的</description>
    </item>
    
    <item>
      <title>Leveldb代码阅读笔记</title>
      <link>https://www.codedump.info/post/20190215-leveldb/</link>
      <pubDate>Fri, 15 Feb 2019 08:52:47 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20190215-leveldb/</guid>
      <description>本文基于leveldb 1.9.0代码。 整体架构 如上图，leveldb的数据存储在内存以及磁盘上，其中： memtable：存储在内存中的数据，使用ski</description>
    </item>
    
  </channel>
</rss>
