<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>分布式 on codedump</title>
    <link>https://codedump.info/tags/%E5%88%86%E5%B8%83%E5%BC%8F/</link>
    <description>Recent content in 分布式 on codedump</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 03 Apr 2019 22:33:58 +0800</lastBuildDate>
    
	<atom:link href="https://codedump.info/tags/%E5%88%86%E5%B8%83%E5%BC%8F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>《数据密集型应用系统设计》第七章《事务》笔记</title>
      <link>https://codedump.info/post/20190403-ddia-chapter07-transaction/</link>
      <pubDate>Wed, 03 Apr 2019 22:33:58 +0800</pubDate>
      
      <guid>https://codedump.info/post/20190403-ddia-chapter07-transaction/</guid>
      <description>事务提供了一种机制，应用程序可以把一组读和写操作放在一个逻辑单元里，所有在一个事务的读和写操作会被视为一个操作：要么全部失败，要么全部成功，</description>
    </item>
    
    <item>
      <title>《数据密集型应用系统设计》第六章数据分区笔记</title>
      <link>https://codedump.info/post/20181124-ddia-chapter06-partitioning/</link>
      <pubDate>Tue, 02 Apr 2019 22:17:24 +0800</pubDate>
      
      <guid>https://codedump.info/post/20181124-ddia-chapter06-partitioning/</guid>
      <description>键值数据的分区 基于关键字区间的分区 给每个分区分配一段连续的关键字或者关键字区间（以最小值和最大值来指示），从关键字区间的上下限可以确定哪个分</description>
    </item>
    
    <item>
      <title>《数据密集型应用系统设计》第五章数据复制笔记</title>
      <link>https://codedump.info/post/20181118-ddia-chapter05-replication/</link>
      <pubDate>Mon, 01 Apr 2019 18:19:22 +0800</pubDate>
      
      <guid>https://codedump.info/post/20181118-ddia-chapter05-replication/</guid>
      <description>主从复制 集群中有一个主节点，写操作都必须经过主节点完成，读操作主从节点都可以处理。 同步复制和异步复制 同步复制 数据在副本上落盘才返回。 优点：保</description>
    </item>
    
    <item>
      <title>Etcd存储的实现</title>
      <link>https://codedump.info/post/20181125-etcd-server/</link>
      <pubDate>Sun, 25 Nov 2018 15:13:28 +0800</pubDate>
      
      <guid>https://codedump.info/post/20181125-etcd-server/</guid>
      <description>在前面已经分析了Raft算法原理、etcd raft库的实现，接着就可以看etcd如何使用raft实现存储服务的了。 以下的分析主要针对etcd</description>
    </item>
    
    <item>
      <title>etcd Raft库解析</title>
      <link>https://codedump.info/post/20180922-etcd-raft/</link>
      <pubDate>Sat, 22 Sep 2018 11:01:02 +0800</pubDate>
      
      <guid>https://codedump.info/post/20180922-etcd-raft/</guid>
      <description>序言 今年初开始学习了解Raft协议，论文读下来之后还是决定结合一个成熟的代码进行更深的理解。etcd做为一个非常成熟的作品，其Raft库实现</description>
    </item>
    
    <item>
      <title>Raft算法原理</title>
      <link>https://codedump.info/post/20180921-raft/</link>
      <pubDate>Fri, 21 Sep 2018 20:15:32 +0800</pubDate>
      
      <guid>https://codedump.info/post/20180921-raft/</guid>
      <description>简介 关于Raft算法，有两篇经典的论文，一篇是《In search of an Understandable Consensus Algorithm》，这是作者最开始讲述Raft算法原理的论文，但是这篇论文太</description>
    </item>
    
  </channel>
</rss>