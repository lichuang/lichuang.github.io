<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>知识管理 on codedump notes</title>
    <link>http://localhost:1313/tags/%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86/</link>
    <description>Recent content in 知识管理 on codedump notes</description>
    <generator>Hugo</generator>
    <language>zh</language>
    <lastBuildDate>Sun, 12 Jun 2022 10:19:47 +0800</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/%E7%9F%A5%E8%AF%86%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>周刊（第18期）：网状的思考，线性的写作</title>
      <link>http://localhost:1313/post/20220612-weekly-18/</link>
      <pubDate>Sun, 12 Jun 2022 10:19:47 +0800</pubDate>
      <guid>http://localhost:1313/post/20220612-weekly-18/</guid>
      <description>&lt;hr&gt;&#xA;&lt;p&gt;引言：本文介绍我理解的“卡片式笔记法”，以及我的笔记实践、工具等。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h1 class=&#34;heading&#34; id=&#34;网状的思考线性的写作&#34;&gt;&#xA;  网状的思考，线性的写作&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%bd%91%e7%8a%b6%e7%9a%84%e6%80%9d%e8%80%83%e7%ba%bf%e6%80%a7%e7%9a%84%e5%86%99%e4%bd%9c&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h1&gt;&#xA;&lt;h2 class=&#34;heading&#34; id=&#34;现实世界中的思考&#34;&gt;&#xA;  现实世界中的思考&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%8e%b0%e5%ae%9e%e4%b8%96%e7%95%8c%e4%b8%ad%e7%9a%84%e6%80%9d%e8%80%83&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;我们的大脑，每时每刻都在进行着一些思考：走在路上、做饭、看书看电影时，等等。&lt;/p&gt;&#xA;&lt;p&gt;而在物理的时空上，肉身在任意时刻只能身处在一个物理意义上的空间里，在时间上也只能处于一个时间点上。&lt;/p&gt;&#xA;&lt;p&gt;可见，思考产生的念头，和时空的限制对比起来，是发散的、不确定的。如下图所示：&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;&#34;&gt;&#xA;&#xA;    &lt;div&gt;&#xA;        &lt;img loading=&#34;lazy&#34; alt=&#34;time-thinking&#34; src=&#34;http://localhost:1313/media/imgs/20220612-weekly-18/time-thinking.png&#34; &gt;&#xA;    &lt;/div&gt;&#xA;&#xA;    &#xA;    &lt;div class=&#34;caption-container&#34;&gt;&#xA;        &lt;figcaption&gt; time-thinking &lt;/figcaption&gt;&#xA;    &lt;/div&gt;&#xA;    &#xA;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;很多时候，思考并不是凭空而生，可能是：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;前几天有过一次对某问题的思考。&lt;/li&gt;&#xA;&lt;li&gt;过了几天，想起来这个问题，又有了另外的考虑和补充。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;当需要记录下来这些想法为笔记时，单篇笔记本身是线型的，只能算是一个一维的创作，这是因为从物理角度来理解一篇“笔记”的话，它在物理上只能存储在一个地方（比如只能是一个文件）。如果按照“一维”的视角，去记录写作的想法，可能就会这样做：某天产生了一个想法，把它记录下来；隔几天有了对这个想法的补充，要么找到前几天的想法记录的地方，继续在这上面补充，也或者另开一篇再记录一次今天的想法。如果这样做，就会得到类似上图那样的效果：不同时空的思考之间，缺少了联系。&lt;/p&gt;&#xA;&lt;p&gt;从这个意义上来说，用只有一个物理维度的“笔记”，来试图存储维度不限的想法、念头，并不适合。这种做法相当于把多维度的想法、念头给降维了。什么时候更适用于这类“降维”的写作行为？我认为是在思考已经很清楚，能够把想法、念头整合在一篇完整的文章时才适合，这时候这篇输出的文章是经过整理、且有完整的观点的。&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;&#34;&gt;&#xA;&#xA;    &lt;div&gt;&#xA;        &lt;img loading=&#34;lazy&#34; alt=&#34;article&#34; src=&#34;http://localhost:1313/media/imgs/20220612-weekly-18/article.png&#34; &gt;&#xA;    &lt;/div&gt;&#xA;&#xA;    &#xA;    &lt;div class=&#34;caption-container&#34;&gt;&#xA;        &lt;figcaption&gt; article &lt;/figcaption&gt;&#xA;    &lt;/div&gt;&#xA;    &#xA;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;在更多的时候人是在不同的时空进行不同的思考，这时候就需要另外的工具来整合这些念头，“卡片式笔记法”就适用于这种场景。&lt;/p&gt;&#xA;&lt;h2 class=&#34;heading&#34; id=&#34;卡片式笔记法&#34;&gt;&#xA;  卡片式笔记法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e5%8d%a1%e7%89%87%e5%bc%8f%e7%ac%94%e8%ae%b0%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;“卡片式笔记法”中的“卡片”，对应的是前述场景中不同时空下产生的想法、念头。与传统意义上的“笔记”不同的是，“卡片式笔记法”中的记录粒度更细，可以任意想法就能记录在它所谓的“卡片”上。同时，在每个“卡片”赋予一个逻辑上的“地址”，这个&lt;code&gt;逻辑地址&lt;/code&gt;类似于编程中的IP地址、超链接等概念。当有了另外的和这个想法有关联的其他想法时，可以再创建另外的卡片，不同的卡片之间通过&lt;code&gt;逻辑地址&lt;/code&gt;进行关联。同时，为了更好的查找同类的想法，可以使用&lt;code&gt;tag&lt;/code&gt;等方式打上标签，便于搜索、归类。&lt;/p&gt;&#xA;&lt;p&gt;下图是一个典型的“卡片笔记”组成示意图：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Unique Identity：这篇笔记的唯一ID，也就是上述的&lt;code&gt;逻辑地址&lt;/code&gt;，其它笔记可以通过这个唯一的&lt;code&gt;逻辑地址&lt;/code&gt;和这篇笔记发生关联。&lt;/li&gt;&#xA;&lt;li&gt;Tags：这篇笔记的标签。笔记的“物理地址”只能有一个（比如存储在哪个目录的哪个文件里），但是逻辑上可以位于多个标签下，在标签这个维度上可以无限制。这样，多个相同标签的笔记就能发生联系。&lt;/li&gt;&#xA;&lt;li&gt;Links：与这篇笔记相关联的、之前写过的笔记的&lt;code&gt;逻辑地址&lt;/code&gt;。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;&#34;&gt;&#xA;&#xA;    &lt;div&gt;&#xA;        &lt;img loading=&#34;lazy&#34; alt=&#34;complete-zettel&#34; src=&#34;http://localhost:1313/media/imgs/20220612-weekly-18/complete-zettel.png&#34; &gt;&#xA;    &lt;/div&gt;&#xA;&#xA;    &#xA;    &lt;div class=&#34;caption-container&#34;&gt;&#xA;        &lt;figcaption&gt; complete-zettel &lt;/figcaption&gt;&#xA;    &lt;/div&gt;&#xA;    &#xA;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;（出自&lt;a href=&#34;https://zettelkasten.de/introduction/zh/&#34;&gt;卢曼卡片盒笔记法介绍 (Introduction to the Zettelkasten Method) • Zettelkasten Method&lt;/a&gt;）&lt;/p&gt;&#xA;&lt;p&gt;可以看到，“卡片式笔记”与传统笔记相比：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;笔记可以更细粒度，只记录某个时刻的某个具体念头即可，更强调笔记的原子化（Atomicity）。当产生了新的念头之后，并不需要去补充到之前的笔记中，因为笔记是&lt;code&gt;原子化&lt;/code&gt;的，只记录一个瞬间的想法，有了新的念头之后，只需要新建笔记与之前的笔记产生关联。&lt;/li&gt;&#xA;&lt;li&gt;笔记有唯一的&lt;code&gt;逻辑地址&lt;/code&gt;，可以打上不同的tags。&lt;/li&gt;&#xA;&lt;li&gt;笔记与笔记之间，可以通过&lt;code&gt;逻辑地址&lt;/code&gt;、&lt;code&gt;tag&lt;/code&gt;来发生关联。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;有了“卡片式笔记”之后，之前在单一时空维度的想法念头，可能就演变成这样的了：&lt;/p&gt;&#xA;&lt;p&gt;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&lt;figure class=&#34;&#34;&gt;&#xA;&#xA;    &lt;div&gt;&#xA;        &lt;img loading=&#34;lazy&#34; alt=&#34;connected-thinking&#34; src=&#34;http://localhost:1313/media/imgs/20220612-weekly-18/connected-thinking.png&#34; &gt;&#xA;    &lt;/div&gt;&#xA;&#xA;    &#xA;    &lt;div class=&#34;caption-container&#34;&gt;&#xA;        &lt;figcaption&gt; connected-thinking &lt;/figcaption&gt;&#xA;    &lt;/div&gt;&#xA;    &#xA;&lt;/figure&gt;&#xA;&lt;/p&gt;&#xA;&lt;p&gt;可以看到，在“卡片式笔记”的视角下，对某个事情有了思考之后，针对这件事情的思考可能发生在不同的时空里，想法和想法之间互相联系、互为补充，不需要再把它们局限、降维仅仅记录在单篇物理意义上的“笔记”里了。在上图中，时间点C产生的想法C，和想法B、A产生了关联，于是想法C加上对这两条笔记的链接，这样并不需要回头对原有的笔记A、B进行补充，只需要新增笔记C，并且增加链接即可。&lt;/p&gt;&#xA;&lt;h2 class=&#34;heading&#34; id=&#34;我的笔记实践&#34;&gt;&#xA;  我的笔记实践&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e6%88%91%e7%9a%84%e7%ac%94%e8%ae%b0%e5%ae%9e%e8%b7%b5&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h2&gt;&#xA;&lt;p&gt;最后聊一聊我自己怎么记录笔记的，我的笔记分为两个类型：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;碎片化的想法。&lt;/li&gt;&#xA;&lt;li&gt;相对正式的记录。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;碎片化的想法&#34;&gt;&#xA;  碎片化的想法&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%a2%8e%e7%89%87%e5%8c%96%e7%9a%84%e6%83%b3%e6%b3%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;一类是前述提到的一些碎片化的想法，这部分记录在&lt;code&gt;flomo&lt;/code&gt;上。&lt;/p&gt;&#xA;&lt;p&gt;在&lt;code&gt;flomo&lt;/code&gt;上，可以对笔记打标签、还可以通过它所谓的&lt;a href=&#34;https://help.flomoapp.com/advance/thread.html&#34;&gt;🔗 批注连接&lt;/a&gt; 功能给之前的想法做补充，其实这里的&lt;code&gt;批注&lt;/code&gt;就是前面提到的在不同的笔记之间发生关联。&lt;/p&gt;&#xA;&lt;p&gt;使用&lt;code&gt;flomo&lt;/code&gt;记录这些零星想法的好处是：心智负担很低，随手就能记录，不需要在乎格式、是否美观等等，一个工具使用起来的心智负担越低，越能提升做这类事情的频率。&lt;/p&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;相对正式的记录&#34;&gt;&#xA;  相对正式的记录&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e7%9b%b8%e5%af%b9%e6%ad%a3%e5%bc%8f%e7%9a%84%e8%ae%b0%e5%bd%95&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;另一类是相对更正式的一些记录，比如每天的日志、阅读某些内容之后的笔记等，这部分使用Markdown方式记录在本地的文件中，同时还按照前面的规则，给需要打标签分类的记录打上标签，在需要笔记之间发生关联的时候，切换到&lt;code&gt;obsidian &lt;/code&gt;下面使用&lt;code&gt;[[]]&lt;/code&gt;的方式关联笔记。对&lt;code&gt;obsidian&lt;/code&gt;使用感兴趣的可以看参考资料中推荐的&lt;code&gt;Obsidian&lt;/code&gt;的使用介绍文章。&lt;/p&gt;&#xA;&lt;p&gt;在这篇演示&lt;code&gt;Obsidian&lt;/code&gt;双链效果的文章&lt;a href=&#34;https://publish.obsidian.md/chinesehelp/01&amp;#43;2021%E6%96%B0%E6%95%99%E7%A8%8B/%E5%8F%8C%E9%93%BE%E8%BD%AF%E4%BB%B6&#34;&gt;双链软件 - Obsidian中文教程&lt;/a&gt;中，演示了&lt;code&gt;Obsidian&lt;/code&gt;下双链的效果。&lt;/p&gt;&#xA;&lt;h3 class=&#34;heading&#34; id=&#34;why-not-logseq&#34;&gt;&#xA;  Why not Logseq？&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#why-not-logseq&#34;&gt;#&lt;/a&gt;&#xA;&lt;/h3&gt;&#xA;&lt;p&gt;除了&lt;code&gt;Obdisian&lt;/code&gt;之外，国人的作品&lt;code&gt;Logseq&lt;/code&gt;也是一款很好的笔记软件，但是我并没有把它做为自己的主力软件。之前尝试用&lt;code&gt;Logseq&lt;/code&gt;好几次，并不是很习惯，我回想起来，可能更多的原因是：&lt;code&gt;Logseq&lt;/code&gt;对于使用者来说，更淡化了本地文件的存在，而我做为一个更倾向于自托管Markdown本地文件来记录笔记的人，更希望能够清楚知道我的每个笔记存储在哪个位置。所以现在，我的主力Markdown编辑器是&lt;code&gt;Typora&lt;/code&gt;，只有在需要查看双链接、tags的时候才用&lt;code&gt;Obsidian&lt;/code&gt;。&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
