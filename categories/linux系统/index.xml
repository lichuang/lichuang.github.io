<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux系统 on codedump的网络日志</title>
    <link>https://www.codedump.info/categories/linux%E7%B3%BB%E7%BB%9F/</link>
    <description>Recent content in Linux系统 on codedump的网络日志</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 20 Jun 2020 12:19:08 +0800</lastBuildDate>
    
	<atom:link href="https://www.codedump.info/categories/linux%E7%B3%BB%E7%BB%9F/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>《面向应用开发者的系统指南》CPU篇之Linux系统平均负载</title>
      <link>https://www.codedump.info/post/20200620-sgfap-loadavg/</link>
      <pubDate>Sat, 20 Jun 2020 12:19:08 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20200620-sgfap-loadavg/</guid>
      <description>本文是《面向应用开发者的系统指南》文档其中的一篇，完整的目录见《面向应用开发者的系统指南》导论。 概述 Linux中可以使用uptime、top</description>
    </item>
    
    <item>
      <title>《面向应用开发者的系统指南》CPU篇之软中断</title>
      <link>https://www.codedump.info/post/20200522-sgfap-softirq/</link>
      <pubDate>Fri, 22 May 2020 21:52:58 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20200522-sgfap-softirq/</guid>
      <description>本文是《面向应用开发者的系统指南》文档其中的一篇，完整的目录见《面向应用开发者的系统指南》导论。 概述 中断（interrupt）通常被定义为一</description>
    </item>
    
    <item>
      <title>《面向应用开发者的系统指南》CPU篇之系统调用</title>
      <link>https://www.codedump.info/post/20200516-sgfap-syscall/</link>
      <pubDate>Sat, 16 May 2020 16:31:03 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20200516-sgfap-syscall/</guid>
      <description>本文是《面向应用开发者的系统指南》文档其中的一篇，完整的目录见《面向应用开发者的系统指南》导论。 概述 应用程序需要使用内核提供出来的一些功能，</description>
    </item>
    
    <item>
      <title>《面向应用开发者的系统指南》CPU篇之使用systemtap分析进程的行为</title>
      <link>https://www.codedump.info/post/20200503-sgfap-process-systemtap/</link>
      <pubDate>Sun, 03 May 2020 14:32:57 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20200503-sgfap-process-systemtap/</guid>
      <description>本文是《面向应用开发者的系统指南》文档其中的一篇，完整的目录见《面向应用开发者的系统指南》导论。 概述 以上描述进程的创建、执行、调度器的工作原</description>
    </item>
    
    <item>
      <title>《面向应用开发者的系统指南》CPU篇之进程调度</title>
      <link>https://www.codedump.info/post/20200503-sgfap-process-schedule/</link>
      <pubDate>Sun, 03 May 2020 09:53:34 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20200503-sgfap-process-schedule/</guid>
      <description>本文是《面向应用开发者的系统指南》文档其中的一篇，完整的目录见《面向应用开发者的系统指南》导论。 概述 一种资源，如果本身数量有限，需要多个资源</description>
    </item>
    
    <item>
      <title>《面向应用开发者的系统指南》CPU篇之进程</title>
      <link>https://www.codedump.info/post/20200502-sgfap-process/</link>
      <pubDate>Sat, 02 May 2020 14:41:22 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20200502-sgfap-process/</guid>
      <description>本文是《面向应用开发者的系统指南》文档其中的一篇，完整的目录见《面向应用开发者的系统指南》导论。 概论 进程即处于执行状态的程序。操作系统执行进</description>
    </item>
    
    <item>
      <title>《面向应用开发者的系统指南》导论</title>
      <link>https://www.codedump.info/post/20200501-system-guide-for-application-programmer/</link>
      <pubDate>Fri, 01 May 2020 21:43:43 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20200501-system-guide-for-application-programmer/</guid>
      <description>导论 我想整理这份文档很久了。 做为一个主要工作在应用层、用户态的开发者，我看了不少的所谓“内核资料”。我身边不少与我相似工作背景的人，也在不停</description>
    </item>
    
    <item>
      <title>Systemtap中内核trace事件的实现</title>
      <link>https://www.codedump.info/post/20200218-linux-traceevent/</link>
      <pubDate>Tue, 18 Feb 2020 17:37:01 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20200218-linux-traceevent/</guid>
      <description>概述 内核中定义了一系列的trace point，这些trace point在特定的内核函数中被触发调用时被记录，而对应到systemtap中就是</description>
    </item>
    
    <item>
      <title>通过实例快速入门Systemtap</title>
      <link>https://www.codedump.info/post/20200128-systemtap-by-example/</link>
      <pubDate>Tue, 28 Jan 2020 11:56:56 +0800</pubDate>
      
      <guid>https://www.codedump.info/post/20200128-systemtap-by-example/</guid>
      <description>我这段时间好好学习了一下Systemtap相关的使用，这篇文章算是学习过程中总结的一些笔记，我另外在github上创建了一个awesome-</description>
    </item>
    
  </channel>
</rss>